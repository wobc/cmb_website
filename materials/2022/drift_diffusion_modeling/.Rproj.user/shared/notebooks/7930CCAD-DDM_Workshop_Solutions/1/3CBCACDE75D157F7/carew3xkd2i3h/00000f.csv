"0","loss_gsquare <- function(parms, observed_data, ntrials = 5000){"
"0","  "
"0","  # get the observed data and calculate the theoretical proportions between the quantiles"
"0","  observed_data <- na.omit(observed_data)"
"0","  correct_observed <- observed_data[observed_data$resp == 1,]$rt"
"0","  error_observed <- observed_data[observed_data$resp == 0,]$rt"
"0","  correct_quantiles <- quantile(correct_observed, probs = c(.1,.3,.5,.7,.9))"
"0","  error_quantiles <- quantile(error_observed, probs = c(.1,.3,.5,.7,.9))"
"0","  correct_obs_props <- c(.1,.2,.2,.2,.2,.1) * (length(correct_observed) / dim(observed_data)[1])"
"0","  error_obs_props <- c(.1,.2,.2,.2,.2,.1) * (length(error_observed) / dim(observed_data)[1])"
"0","  obs_props <- c(correct_obs_props,error_obs_props)"
"0","  "
"0","  # get predicted data for the current set of candidate parameters"
"0","  predicted_data <- DDM(v = parms[1], a = parms[2], ter = parms[3], ntrials = ntrials)"
"0","  predicted_data <- na.omit(predicted_data)"
"0","  correct_predicted <- predicted_data[predicted_data$resp == 1,]$rt"
"0","  error_predicted <- predicted_data[predicted_data$resp == 0,]$rt"
"0","  "
"0","  # get predicted proportions, given the observed quantile cut off points"
"0","  pred_props <- c("
"0","    # correct trials"
"0","    sum(correct_predicted <= correct_quantiles[1]),"
"0","    sum(correct_predicted >= correct_quantiles[1] & correct_predicted <= correct_quantiles[2]),"
"0","    sum(correct_predicted >= correct_quantiles[2] & correct_predicted <= correct_quantiles[3]),"
"0","    sum(correct_predicted >= correct_quantiles[3] & correct_predicted <= correct_quantiles[4]),"
"0","    sum(correct_predicted >= correct_quantiles[4] & correct_predicted <= correct_quantiles[5]),"
"0","    sum(correct_predicted > correct_quantiles[5]),"
"0","    # error trials"
"0","    sum(error_predicted <= error_quantiles[1]),"
"0","    sum(error_predicted >= error_quantiles[1] & error_predicted <= error_quantiles[2]),"
"0","    sum(error_predicted >= error_quantiles[2] & error_predicted <= error_quantiles[3]),"
"0","    sum(error_predicted >= error_quantiles[3] & error_predicted <= error_quantiles[4]),"
"0","    sum(error_predicted >= error_quantiles[4] & error_predicted <= error_quantiles[5]),"
"0","    sum(error_predicted >= error_quantiles[5]) "
"0","  ) / dim(predicted_data)[1]"
"0","  "
"0","  # quantify mismatch between observed and predicted proportions (G2)"
"0","  N <- dim(observed_data)[1]"
"0","  pred_props = pmax(pred_props,1e-10)"
"0","  gsquare <- 2 * N * sum(obs_props * log(obs_props/pred_props)) "
"0","  return(gsquare)"
"0","}"
