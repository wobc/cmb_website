"0","# initialize a dataframe to store the true and recovered parameters"
"0","recovery_df <- data.frame(true_v = as.numeric(), true_a = as.numeric(), true_ter = as.numeric(),"
"0","                          recovered_v = as.numeric(), recovered_a = as.numeric(), recovered_ter = as.numeric())"
"0",""
"0","for (i in 1:50) {"
"0","  print(i)"
"0","  # generate some random parameters (""the true parameters"")"
"0","  v <- runif(1, 0, 5)"
"0","  a <- runif(1, 0.5, 2.5)"
"0","  ter <- runif(1, 0.1, 0.6)"
"0","  generating_parameters <- c(""true_v"" = v, ""true_a"" = a, ""true_ter"" = ter)"
"0","  "
"0","  # generate some data based on these parameters"
"0","  generated_data <- rdiffusion(v = generating_parameters[""true_v""], "
"0","                               a = generating_parameters[""true_a""], "
"0","                               t0 = generating_parameters[""true_ter""], n = 50)"
"0","  "
"0","  # use the optimization algorithm to see if we correctly ""recover"" the parameters"
"0","  DEoptim_result <- DEoptim(loss_loglik, lower = c(0, .5, .1), upper = c(5, 2.5, .6), observed_data = generated_data,"
"0","          control=list(itermax=100,trace=101))"
"0","  optimal_parameters <- DEoptim_result$optim$bestmem"
"0","  names(optimal_parameters) <- c(""recovered_v"", ""recovered_a"", ""recovered_ter"")"
"0","  "
"0","  c(generating_parameters, optimal_parameters)"
"0","  recovery_df <- rbind(recovery_df, c(generating_parameters, optimal_parameters))"
"0","}"
"1","[1]"
"1"," 1"
"1","
"
"1","[1]"
"1"," 2"
"1","
"
"1","[1]"
"1"," 3"
"1","
"
"1","[1]"
"1"," 4"
"1","
"
"1","[1]"
"1"," 5"
"1","
"
"1","[1]"
"1"," 6"
"1","
"
"1","[1]"
"1"," 7"
"1","
"
"1","[1]"
"1"," 8"
"1","
"
"1","[1]"
"1"," 9"
"1","
"
"1","[1]"
"1"," 10"
"1","
"
"1","[1]"
"1"," 11"
"1","
"
"1","[1]"
"1"," 12"
"1","
"
"1","[1]"
"1"," 13"
"1","
"
"1","[1]"
"1"," 14"
"1","
"
"1","[1]"
"1"," 15"
"1","
"
"1","[1]"
"1"," 16"
"1","
"
"1","[1]"
"1"," 17"
"1","
"
"1","[1]"
"1"," 18"
"1","
"
"1","[1]"
"1"," 19"
"1","
"
"1","[1]"
"1"," 20"
"1","
"
"1","[1]"
"1"," 21"
"1","
"
"1","[1]"
"1"," 22"
"1","
"
"1","[1]"
"1"," 23"
"1","
"
"1","[1]"
"1"," 24"
"1","
"
"1","[1]"
"1"," 25"
"1","
"
"1","[1]"
"1"," 26"
"1","
"
"1","[1]"
"1"," 27"
"1","
"
"1","[1]"
"1"," 28"
"1","
"
"1","[1]"
"1"," 29"
"1","
"
"1","[1]"
"1"," 30"
"1","
"
"1","[1]"
"1"," 31"
"1","
"
"1","[1]"
"1"," 32"
"1","
"
"1","[1]"
"1"," 33"
"1","
"
"1","[1]"
"1"," 34"
"1","
"
"1","[1]"
"1"," 35"
"1","
"
"1","[1]"
"1"," 36"
"1","
"
"1","[1]"
"1"," 37"
"1","
"
"1","[1]"
"1"," 38"
"1","
"
"1","[1]"
"1"," 39"
"1","
"
"1","[1]"
"1"," 40"
"1","
"
"1","[1]"
"1"," 41"
"1","
"
"1","[1]"
"1"," 42"
"1","
"
"1","[1]"
"1"," 43"
"1","
"
"1","[1]"
"1"," 44"
"1","
"
"1","[1]"
"1"," 45"
"1","
"
"1","[1]"
"1"," 46"
"1","
"
"1","[1]"
"1"," 47"
"1","
"
"1","[1]"
"1"," 48"
"1","
"
"1","[1]"
"1"," 49"
"1","
"
"1","[1]"
"1"," 50"
"1","
"
"0","names(recovery_df) <- c(""true_v"", ""true_a"", ""true_ter"", ""recovered_v"", ""recovered_a"", ""recovered_ter"")"
