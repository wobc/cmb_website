"0","flip_errors <- function(data){"
"0","  data$resp <- ifelse(data$resp == 0, -1, data$resp)"
"0","  data$rt <- data$rt * data$resp"
"0","  data <- na.omit(data)"
"0","  return(data)"
"0","}"
"0","plot_fptd <- function(data, comparison_data){"
"0","  # data should have a ""rt"" (in seconds) and a ""resp"" column (that is coded as 0/1)"
"0","  "
"0","  # check max ylim necessary"
"0","  if(!missing(comparison_data)){"
"0","    max_ylim = max(density(data$rt, na.rm=T)$y, density(comparison_data$rt, na.rm=T)$y)"
"0","  } else {"
"0","    max_ylim = max(density(data$rt, na.rm=T)$y)"
"0","  }"
"0","  "
"0","  # first data set"
"0","  data <- flip_errors(data)"
"0","  hist(data$rt, freq = FALSE, breaks = 100, main = """", col = alpha(""red"", 0.4), border = ""black"", xlab = ""RT (s)"", ylim = c(0, max_ylim))"
"0","  "
"0","  # second data set"
"0","  if(!missing(comparison_data)) {"
"0","    comparison_data <- flip_errors(comparison_data)"
"0","    lines(density(comparison_data$rt, na.rm=T), col = ""blue"", lwd = 3.5)"
"0","  }"
"0","}"
"0","fptd_data1 <- simulate_DDM(v = .5, n = 2000)"
"0","fptd_data2 <- simulate_DDM(v = 2, n = 2000)"
"0","plot_fptd(data = fptd_data1, comparison_data = fptd_data2)"
